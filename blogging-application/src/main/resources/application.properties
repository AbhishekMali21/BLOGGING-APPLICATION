server.port=9090

# db configuration
# port find in mysql terminal \s - TCP Port and also server version
spring.datasource.url=jdbc:mysql://localhost:3306/blogging_application
spring.datasource.username=root
spring.datasource.password=root
# to create an instance of the specified JDBC driver class, which is then used to establish a connection to the database.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#  A Hibernate dialect is a class that defines the SQL syntax and behavior specific to a particular database. It is used by Hibernate to generate SQL statements that are optimized for the specific database and to convert Hibernate exceptions into database-specific exceptions.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# determines how Hibernate should generate and execute database schema management statements.
# none, create, update, create-update, validate
spring.jpa.hibernate.ddl-auto=update

# Hibernate will log all the SQL statements that are executed during the application's runtime. 
# This is useful for debugging and understanding how the application interacts with the database.
# The SQL statements will be logged to the console, along with other information such as the execution time.
spring.jpa.show-sql=true

# Set the maximum file size allowed for file uploads to 10 megabytes
spring.servlet.multipart.max-file-size = 10MB

# Set the maximum request size allowed for file uploads to 10 megabytes
spring.servlet.multipart.max-request-size = 10MB

# Set the directory for storing uploaded images
project.image=images/

# Set the log level for Spring Security to DEBUG
# The logging levels, in increasing order of severity, are: TRACE DEBUG INFO WARN ERROR FATAL
logging.level.org.springframework.security=DEBUG

# spring provides by default form based authentication
# Set up a user with the username "root", the password "root", and the role "ADMIN"
spring.security.user.name=root
spring.security.user.password=root
# hierarchical role-based authorization syste
# a user with the role "ROLE_ADMIN" would have all of the permissions of users with the roles "ROLE_USER" and "ROLE_MANAGER"
spring.security.user.roles=ADMIN
